
state 0:

	program : . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	program	goto 150
	exp	goto 3
	lval	goto 2
	lval'	goto 1

	.	error


state 1:

	exp : lval' .  (reduce by rule 4)
	lval : lval' .  (reduce by rule 11)
	lval' : lval' . LBRACK exp RBRACK 

	EOF	reduce by rule 4
	COMMA	reduce by rule 4
	SEMICOLON	reduce by rule 4
	RPAREN	reduce by rule 4
	LBRACK	shift 15
	RBRACK	reduce by rule 4
	RBRACE	reduce by rule 4
	DOT	reduce by rule 11
	PLUS	reduce by rule 4
	MINUS	reduce by rule 4
	TIMES	reduce by rule 4
	DIVIDE	reduce by rule 4
	EQ	reduce by rule 4
	NEQ	reduce by rule 4
	LT	reduce by rule 4
	LE	reduce by rule 4
	GT	reduce by rule 4
	GE	reduce by rule 4
	AND	reduce by rule 4
	OR	reduce by rule 4
	ASSIGN	reduce by rule 11
	THEN	reduce by rule 4
	ELSE	reduce by rule 4
	TO	reduce by rule 4
	DO	reduce by rule 4
	IN	reduce by rule 4
	END	reduce by rule 4
	FUNCTION	reduce by rule 4
	VAR	reduce by rule 4
	TYPE	reduce by rule 4


	.	error


state 2:

	exp : lval . ASSIGN exp 
	lval' : lval . DOT ID 

	DOT	shift 17
	ASSIGN	shift 16


	.	error


state 3:

	program : exp .  (reduce by rule 0)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 0


state 4:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 5:

	exp : BREAK .  (reduce by rule 73)



	.	reduce by rule 73


state 6:

	exp : LET . IN END 
	exp : LET . IN exps END 
	exp : LET . decs IN END 
	exp : LET . decs IN exps END 

	IN	shift 42
	FUNCTION	shift 41
	VAR	shift 40
	TYPE	shift 39

	decs	goto 38
	dec	goto 37
	vardec	goto 36
	tydec	goto 35
	tydecs	goto 34
	tydec_wrap	goto 33
	fundecs	goto 32
	fundec_wrap	goto 31
	fundec	goto 30

	.	error


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 43


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 44
	lval	goto 2
	lval'	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 45
	lval	goto 2
	lval'	goto 1

	.	error


state 10:

	exp : MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 46
	lval	goto 2
	lval'	goto 1

	.	error


state 11:

	exp : LPAREN . exps RPAREN 
	exp : LPAREN . RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	RPAREN	shift 49
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 48
	exps	goto 47
	lval	goto 2
	lval'	goto 1

	.	error


state 12:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 13:

	exp : INT .  (reduce by rule 2)



	.	reduce by rule 2


state 14:

	exp : ID .  (reduce by rule 3)
	exp : ID . LPAREN callParams RPAREN 
	exp : ID . LPAREN RPAREN 
	exp : ID . LBRACK exp RBRACK OF exp 
	exp : ID . NIL 
	exp : ID . LBRACE RBRACE 
	exp : ID . LBRACE recexps RBRACE 
	lval : ID .  (reduce by rule 10)
	lval' : ID . LBRACK exp RBRACK 

	EOF	reduce by rule 3
	COMMA	reduce by rule 3
	SEMICOLON	reduce by rule 3
	LPAREN	shift 53
	RPAREN	reduce by rule 3
	LBRACK	shift 52
	RBRACK	reduce by rule 3
	LBRACE	shift 51
	RBRACE	reduce by rule 3
	DOT	reduce by rule 10
	PLUS	reduce by rule 3
	MINUS	reduce by rule 3
	TIMES	reduce by rule 3
	DIVIDE	reduce by rule 3
	EQ	reduce by rule 3
	NEQ	reduce by rule 3
	LT	reduce by rule 3
	LE	reduce by rule 3
	GT	reduce by rule 3
	GE	reduce by rule 3
	AND	reduce by rule 3
	OR	reduce by rule 3
	ASSIGN	reduce by rule 10
	THEN	reduce by rule 3
	ELSE	reduce by rule 3
	TO	reduce by rule 3
	DO	reduce by rule 3
	IN	reduce by rule 3
	END	reduce by rule 3
	NIL	shift 50
	FUNCTION	reduce by rule 3
	VAR	reduce by rule 3
	TYPE	reduce by rule 3


	.	error


state 15:

	lval' : lval' LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 54
	lval	goto 2
	lval'	goto 1

	.	error


state 16:

	exp : lval ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 55
	lval	goto 2
	lval'	goto 1

	.	error


state 17:

	lval' : lval DOT . ID 

	ID	shift 56


	.	error


state 18:

	exp : exp OR . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	lval	goto 2
	lval'	goto 1

	.	error


state 19:

	exp : exp AND . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 58
	lval	goto 2
	lval'	goto 1

	.	error


state 20:

	exp : exp GE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 59
	lval	goto 2
	lval'	goto 1

	.	error


state 21:

	exp : exp GT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 60
	lval	goto 2
	lval'	goto 1

	.	error


state 22:

	exp : exp LE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 61
	lval	goto 2
	lval'	goto 1

	.	error


state 23:

	exp : exp LT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 62
	lval	goto 2
	lval'	goto 1

	.	error


state 24:

	exp : exp NEQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 63
	lval	goto 2
	lval'	goto 1

	.	error


state 25:

	exp : exp EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 64
	lval	goto 2
	lval'	goto 1

	.	error


state 26:

	exp : exp DIVIDE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 65
	lval	goto 2
	lval'	goto 1

	.	error


state 27:

	exp : exp TIMES . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 66
	lval	goto 2
	lval'	goto 1

	.	error


state 28:

	exp : exp MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 67
	lval	goto 2
	lval'	goto 1

	.	error


state 29:

	exp : exp PLUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 68
	lval	goto 2
	lval'	goto 1

	.	error


state 30:

	fundecs : fundec . fundecs 
	fundecs : fundec .  (reduce by rule 40)

	FUNCTION	shift 41

	fundecs	goto 69
	fundec	goto 30

	.	reduce by rule 40


state 31:

	dec : fundec_wrap .  (reduce by rule 34)



	.	reduce by rule 34


state 32:

	fundec_wrap : fundecs .  (reduce by rule 38)



	.	reduce by rule 38


state 33:

	dec : tydec_wrap .  (reduce by rule 35)



	.	reduce by rule 35


state 34:

	tydec_wrap : tydecs .  (reduce by rule 46)



	.	reduce by rule 46


state 35:

	tydecs : tydec . tydecs 
	tydecs : tydec .  (reduce by rule 48)

	TYPE	shift 39

	tydec	goto 35
	tydecs	goto 70

	.	reduce by rule 48


state 36:

	dec : vardec .  (reduce by rule 33)



	.	reduce by rule 33


state 37:

	decs : dec .  (reduce by rule 31)
	decs : dec . decs 

	FUNCTION	shift 41
	VAR	shift 40
	TYPE	shift 39

	decs	goto 71
	dec	goto 37
	vardec	goto 36
	tydec	goto 35
	tydecs	goto 34
	tydec_wrap	goto 33
	fundecs	goto 32
	fundec_wrap	goto 31
	fundec	goto 30

	.	reduce by rule 31


state 38:

	exp : LET decs . IN END 
	exp : LET decs . IN exps END 

	IN	shift 72


	.	error


state 39:

	tydec : TYPE . ID EQ ty 

	ID	shift 73


	.	error


state 40:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 74


	.	error


state 41:

	fundec : FUNCTION . ID fundec_params fundec_type 

	ID	shift 75


	.	error


state 42:

	exp : LET IN . END 
	exp : LET IN . exps END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	END	shift 77
	BREAK	shift 5
	NIL	shift 4

	exp	goto 48
	exps	goto 76
	lval	goto 2
	lval'	goto 1

	.	error


state 43:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 78


	.	error


state 44:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : WHILE exp . DO exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 79


	.	error


state 45:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	shift 80


	.	error


state 46:

	exp : MINUS exp .  (reduce by rule 56)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 



	.	reduce by rule 56


state 47:

	exp : LPAREN exps . RPAREN 

	RPAREN	shift 81


	.	error


state 48:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exps : exp .  (reduce by rule 18)
	exps : exp . SEMICOLON exps 

	SEMICOLON	shift 82
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 18


state 49:

	exp : LPAREN RPAREN .  (reduce by rule 17)



	.	reduce by rule 17


state 50:

	exp : ID NIL .  (reduce by rule 24)



	.	reduce by rule 24


state 51:

	exp : ID LBRACE . RBRACE 
	exp : ID LBRACE . recexps RBRACE 

	ID	shift 86
	RBRACE	shift 85

	recexp	goto 84
	recexps	goto 83

	.	error


state 52:

	exp : ID LBRACK . exp RBRACK OF exp 
	lval' : ID LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 87
	lval	goto 2
	lval'	goto 1

	.	error


state 53:

	exp : ID LPAREN . callParams RPAREN 
	exp : ID LPAREN . RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	RPAREN	shift 90
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 89
	lval	goto 2
	lval'	goto 1
	callParams	goto 88

	.	error


state 54:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	lval' : lval' LBRACK exp . RBRACK 

	RBRACK	shift 91
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 55:

	exp : lval ASSIGN exp .  (reduce by rule 15)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 15


state 56:

	lval' : lval DOT ID .  (reduce by rule 12)



	.	reduce by rule 12


state 57:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 67)
	exp : exp . AND exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19


	.	reduce by rule 67


state 58:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 68)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20


	.	reduce by rule 68


state 59:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 66)
	exp : exp . OR exp 
	exp : exp . AND exp 

	EOF	reduce by rule 66
	COMMA	reduce by rule 66
	SEMICOLON	reduce by rule 66
	RPAREN	reduce by rule 66
	RBRACK	reduce by rule 66
	RBRACE	reduce by rule 66
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 66
	OR	reduce by rule 66
	THEN	reduce by rule 66
	ELSE	reduce by rule 66
	TO	reduce by rule 66
	DO	reduce by rule 66
	IN	reduce by rule 66
	END	reduce by rule 66
	FUNCTION	reduce by rule 66
	VAR	reduce by rule 66
	TYPE	reduce by rule 66


	.	error


state 60:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 65)
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 

	EOF	reduce by rule 65
	COMMA	reduce by rule 65
	SEMICOLON	reduce by rule 65
	RPAREN	reduce by rule 65
	RBRACK	reduce by rule 65
	RBRACE	reduce by rule 65
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 65
	OR	reduce by rule 65
	THEN	reduce by rule 65
	ELSE	reduce by rule 65
	TO	reduce by rule 65
	DO	reduce by rule 65
	IN	reduce by rule 65
	END	reduce by rule 65
	FUNCTION	reduce by rule 65
	VAR	reduce by rule 65
	TYPE	reduce by rule 65


	.	error


state 61:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 64)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 

	EOF	reduce by rule 64
	COMMA	reduce by rule 64
	SEMICOLON	reduce by rule 64
	RPAREN	reduce by rule 64
	RBRACK	reduce by rule 64
	RBRACE	reduce by rule 64
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 64
	OR	reduce by rule 64
	THEN	reduce by rule 64
	ELSE	reduce by rule 64
	TO	reduce by rule 64
	DO	reduce by rule 64
	IN	reduce by rule 64
	END	reduce by rule 64
	FUNCTION	reduce by rule 64
	VAR	reduce by rule 64
	TYPE	reduce by rule 64


	.	error


state 62:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 63)
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 

	EOF	reduce by rule 63
	COMMA	reduce by rule 63
	SEMICOLON	reduce by rule 63
	RPAREN	reduce by rule 63
	RBRACK	reduce by rule 63
	RBRACE	reduce by rule 63
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 63
	OR	reduce by rule 63
	THEN	reduce by rule 63
	ELSE	reduce by rule 63
	TO	reduce by rule 63
	DO	reduce by rule 63
	IN	reduce by rule 63
	END	reduce by rule 63
	FUNCTION	reduce by rule 63
	VAR	reduce by rule 63
	TYPE	reduce by rule 63


	.	error


state 63:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 62)
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 

	EOF	reduce by rule 62
	COMMA	reduce by rule 62
	SEMICOLON	reduce by rule 62
	RPAREN	reduce by rule 62
	RBRACK	reduce by rule 62
	RBRACE	reduce by rule 62
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 62
	OR	reduce by rule 62
	THEN	reduce by rule 62
	ELSE	reduce by rule 62
	TO	reduce by rule 62
	DO	reduce by rule 62
	IN	reduce by rule 62
	END	reduce by rule 62
	FUNCTION	reduce by rule 62
	VAR	reduce by rule 62
	TYPE	reduce by rule 62


	.	error


state 64:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 61)
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 

	EOF	reduce by rule 61
	COMMA	reduce by rule 61
	SEMICOLON	reduce by rule 61
	RPAREN	reduce by rule 61
	RBRACK	reduce by rule 61
	RBRACE	reduce by rule 61
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 61
	OR	reduce by rule 61
	THEN	reduce by rule 61
	ELSE	reduce by rule 61
	TO	reduce by rule 61
	DO	reduce by rule 61
	IN	reduce by rule 61
	END	reduce by rule 61
	FUNCTION	reduce by rule 61
	VAR	reduce by rule 61
	TYPE	reduce by rule 61


	.	error


state 65:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 58)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 



	.	reduce by rule 58


state 66:

	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 57)
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 



	.	reduce by rule 57


state 67:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 60)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 60


state 68:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 59)
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 59


state 69:

	fundecs : fundec fundecs .  (reduce by rule 39)



	.	reduce by rule 39


state 70:

	tydecs : tydec tydecs .  (reduce by rule 47)



	.	reduce by rule 47


state 71:

	decs : dec decs .  (reduce by rule 32)



	.	reduce by rule 32


state 72:

	exp : LET decs IN . END 
	exp : LET decs IN . exps END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	END	shift 93
	BREAK	shift 5
	NIL	shift 4

	exp	goto 48
	exps	goto 92
	lval	goto 2
	lval'	goto 1

	.	error


state 73:

	tydec : TYPE ID . EQ ty 

	EQ	shift 94


	.	error


state 74:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 96
	ASSIGN	shift 95


	.	error


state 75:

	fundec : FUNCTION ID . fundec_params fundec_type 

	LPAREN	shift 98

	fundec_params	goto 97

	.	error


state 76:

	exp : LET IN exps . END 

	END	shift 99


	.	error


state 77:

	exp : LET IN END .  (reduce by rule 27)



	.	reduce by rule 27


state 78:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 100
	lval	goto 2
	lval'	goto 1

	.	error


state 79:

	exp : WHILE exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 101
	lval	goto 2
	lval'	goto 1

	.	error


state 80:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 102
	lval	goto 2
	lval'	goto 1

	.	error


state 81:

	exp : LPAREN exps RPAREN .  (reduce by rule 16)



	.	reduce by rule 16


state 82:

	exps : exp SEMICOLON . exps 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 48
	exps	goto 103
	lval	goto 2
	lval'	goto 1

	.	error


state 83:

	exp : ID LBRACE recexps . RBRACE 

	RBRACE	shift 104


	.	error


state 84:

	recexps : recexp .  (reduce by rule 22)
	recexps : recexp . COMMA recexps 

	COMMA	shift 105


	.	reduce by rule 22


state 85:

	exp : ID LBRACE RBRACE .  (reduce by rule 25)



	.	reduce by rule 25


state 86:

	recexp : ID . EQ exp 

	EQ	shift 106


	.	error


state 87:

	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	lval' : ID LBRACK exp . RBRACK 

	RBRACK	shift 107
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 88:

	exp : ID LPAREN callParams . RPAREN 

	RPAREN	shift 108


	.	error


state 89:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	callParams : exp .  (reduce by rule 6)
	callParams : exp . COMMA callParams 

	COMMA	shift 109
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 6


state 90:

	exp : ID LPAREN RPAREN .  (reduce by rule 9)



	.	reduce by rule 9


state 91:

	lval' : lval' LBRACK exp RBRACK .  (reduce by rule 14)



	.	reduce by rule 14


state 92:

	exp : LET decs IN exps . END 

	END	shift 110


	.	error


state 93:

	exp : LET decs IN END .  (reduce by rule 29)



	.	reduce by rule 29


state 94:

	tydec : TYPE ID EQ . ty 

	ID	shift 114
	LBRACE	shift 113
	ARRAY	shift 112

	ty	goto 111

	.	error


state 95:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 115
	lval	goto 2
	lval'	goto 1

	.	error


state 96:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 116


	.	error


state 97:

	fundec : FUNCTION ID fundec_params . fundec_type 

	COLON	shift 119
	EQ	shift 118

	fundec_type	goto 117

	.	error


state 98:

	fundec_params : LPAREN . tyfields RPAREN 
	fundec_params : LPAREN . RPAREN 

	ID	shift 123
	RPAREN	shift 122

	tyfield	goto 121
	tyfields	goto 120

	.	error


state 99:

	exp : LET IN exps END .  (reduce by rule 28)



	.	reduce by rule 28


state 100:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	TO	shift 124


	.	error


state 101:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : WHILE exp DO exp .  (reduce by rule 71)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 71


state 102:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 70)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	ELSE	shift 125


	.	reduce by rule 70


state 103:

	exps : exp SEMICOLON exps .  (reduce by rule 19)



	.	reduce by rule 19


state 104:

	exp : ID LBRACE recexps RBRACE .  (reduce by rule 26)



	.	reduce by rule 26


state 105:

	recexps : recexp COMMA . recexps 

	ID	shift 86

	recexp	goto 84
	recexps	goto 126

	.	error


state 106:

	recexp : ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 127
	lval	goto 2
	lval'	goto 1

	.	error


state 107:

	exp : ID LBRACK exp RBRACK . OF exp 
	lval' : ID LBRACK exp RBRACK .  (reduce by rule 13)

	OF	shift 128


	.	reduce by rule 13


state 108:

	exp : ID LPAREN callParams RPAREN .  (reduce by rule 8)



	.	reduce by rule 8


state 109:

	callParams : exp COMMA . callParams 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 89
	lval	goto 2
	lval'	goto 1
	callParams	goto 129

	.	error


state 110:

	exp : LET decs IN exps END .  (reduce by rule 30)



	.	reduce by rule 30


state 111:

	tydec : TYPE ID EQ ty .  (reduce by rule 49)



	.	reduce by rule 49


state 112:

	ty : ARRAY . OF ID 

	OF	shift 130


	.	error


state 113:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 123

	tyfield	goto 121
	tyfields	goto 131

	.	error


state 114:

	ty : ID .  (reduce by rule 50)



	.	reduce by rule 50


state 115:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 36)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 36


state 116:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 132


	.	error


state 117:

	fundec : FUNCTION ID fundec_params fundec_type .  (reduce by rule 41)



	.	reduce by rule 41


state 118:

	fundec_type : EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 133
	lval	goto 2
	lval'	goto 1

	.	error


state 119:

	fundec_type : COLON . ID EQ exp 

	ID	shift 134


	.	error


state 120:

	fundec_params : LPAREN tyfields . RPAREN 

	RPAREN	shift 135


	.	error


state 121:

	tyfields : tyfield .  (reduce by rule 54)
	tyfields : tyfield . COMMA tyfields 

	COMMA	shift 136


	.	reduce by rule 54


state 122:

	fundec_params : LPAREN RPAREN .  (reduce by rule 43)



	.	reduce by rule 43


state 123:

	tyfield : ID . COLON ID 

	COLON	shift 137


	.	error


state 124:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 138
	lval	goto 2
	lval'	goto 1

	.	error


state 125:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 139
	lval	goto 2
	lval'	goto 1

	.	error


state 126:

	recexps : recexp COMMA recexps .  (reduce by rule 23)



	.	reduce by rule 23


state 127:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	recexp : ID EQ exp .  (reduce by rule 21)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 21


state 128:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 140
	lval	goto 2
	lval'	goto 1

	.	error


state 129:

	callParams : exp COMMA callParams .  (reduce by rule 7)



	.	reduce by rule 7


state 130:

	ty : ARRAY OF . ID 

	ID	shift 141


	.	error


state 131:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 142


	.	error


state 132:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 143
	lval	goto 2
	lval'	goto 1

	.	error


state 133:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	fundec_type : EQ exp .  (reduce by rule 44)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 44


state 134:

	fundec_type : COLON ID . EQ exp 

	EQ	shift 144


	.	error


state 135:

	fundec_params : LPAREN tyfields RPAREN .  (reduce by rule 42)



	.	reduce by rule 42


state 136:

	tyfields : tyfield COMMA . tyfields 

	ID	shift 123

	tyfield	goto 121
	tyfields	goto 145

	.	error


state 137:

	tyfield : ID COLON . ID 

	ID	shift 146


	.	error


state 138:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 147


	.	error


state 139:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 69)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 69


state 140:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 20)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 20


state 141:

	ty : ARRAY OF ID .  (reduce by rule 51)



	.	reduce by rule 51


state 142:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 52)



	.	reduce by rule 52


state 143:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 37)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 37


state 144:

	fundec_type : COLON ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 148
	lval	goto 2
	lval'	goto 1

	.	error


state 145:

	tyfields : tyfield COMMA tyfields .  (reduce by rule 55)



	.	reduce by rule 55


state 146:

	tyfield : ID COLON ID .  (reduce by rule 53)



	.	reduce by rule 53


state 147:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 149
	lval	goto 2
	lval'	goto 1

	.	error


state 148:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	fundec_type : COLON ID EQ exp .  (reduce by rule 45)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 45


state 149:

	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 72)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 72


state 150:


	EOF	accept


	.	error

575 of 1079 action table entries left after compaction
153 goto table entries
